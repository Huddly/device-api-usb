# This workflow will run build the typescript source files, run linter and prettier
name: CI Check

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - '*'

jobs:
  build:
    name: "Build & Test"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [
          ubuntu-latest,
          macos-latest,
          windows-latest
        ]
        node-version: [
          # 11,
          # 12,
          14
        ]

    steps:
      - name: Set git to use LF
        if: matrix.os == 'windows-latest'
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout repo and submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Set env
        shell: bash
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Test ref
        shell: bash
        run: echo ${{github.ref}}

      - name: Test
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          TAG: ${{ env.RELEASE_VERSION }}
        shell: bash
        run: |
          echo "Tag is ${TAG}"

      - name: "Pre-Install hook Ubuntu"
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt update
          sudo apt install -y gcc-8 g++-8
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 60
          sudo apt install libudev-dev

      - name: "Install python2.7 on windows"
        if: matrix.os == 'windows-latest'
        uses: actions/setup-python@v2
        with:
          python-version: 2.7

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: "Build & Test (Windows)"
        if: matrix.os == 'windows-latest'
        run: |
          npm --add-python-to-path='true' --debug --global --production windows-build-tools
          npm ci
          npm run tslint
          npm run prettier-check
          npm run napi-64
          npm run napi-32

      - name: "Build & Test (OSX & Linux)"
        if: matrix.os != 'windows-latest'
        run: |
          npm ci
          npm run tslint
          npm run prettier-check
          npm run build
          npm test

      # Todo: Upload binaries
